# //  Questa Sim-64
# //  Version 10.7c linux_x86_64 Aug 17 2018
# //
# //  Copyright 1991-2018 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  QuestaSim and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
do run_sim.do
# QuestaSim-64 vcom 10.7c Compiler 2018.08 Aug 17 2018
# Start time: 11:16:17 on Apr 12,2021
# vcom -reportprogress 30 -work work ../src/fpuvhdl/common/fpnormalize_fpnormalize.vhd 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Loading package STD_LOGIC_UNSIGNED
# -- Compiling entity FPnormalize
# -- Compiling architecture FPnormalize of FPnormalize
# End time: 11:16:18 on Apr 12,2021, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# QuestaSim-64 vcom 10.7c Compiler 2018.08 Aug 17 2018
# Start time: 11:16:18 on Apr 12,2021
# vcom -reportprogress 30 -work work ../src/fpuvhdl/common/packfp_packfp.vhd 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Compiling entity PackFP
# -- Compiling architecture PackFP of PackFP
# End time: 11:16:18 on Apr 12,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# QuestaSim-64 vcom 10.7c Compiler 2018.08 Aug 17 2018
# Start time: 11:16:18 on Apr 12,2021
# vcom -reportprogress 30 -work work ../src/fpuvhdl/common/fpround_fpround.vhd 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Loading package STD_LOGIC_UNSIGNED
# -- Compiling entity FPround
# -- Compiling architecture FPround of FPround
# End time: 11:16:19 on Apr 12,2021, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# QuestaSim-64 vcom 10.7c Compiler 2018.08 Aug 17 2018
# Start time: 11:16:19 on Apr 12,2021
# vcom -reportprogress 30 -work work ../src/fpuvhdl/common/unpackfp_unpackfp.vhd 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Compiling entity UnpackFP
# -- Compiling architecture UnpackFP of UnpackFP
# End time: 11:16:19 on Apr 12,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# QuestaSim-64 vcom 10.7c Compiler 2018.08 Aug 17 2018
# Start time: 11:16:19 on Apr 12,2021
# vcom -reportprogress 30 -work work ../src/fpuvhdl/multiplier/fpmul_stage1_struct.vhd 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Compiling entity FPmul_stage1
# -- Compiling architecture struct of FPmul_stage1
# -- Loading entity UnpackFP
# End time: 11:16:20 on Apr 12,2021, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# QuestaSim-64 vcom 10.7c Compiler 2018.08 Aug 17 2018
# Start time: 11:16:20 on Apr 12,2021
# vcom -reportprogress 30 -work work ../src/fpuvhdl/multiplier/fpmul_stage2_struct_mbe.vhd 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Compiling entity FPmul_stage2
# -- Compiling architecture struct of FPmul_stage2
# End time: 11:16:20 on Apr 12,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# QuestaSim-64 vcom 10.7c Compiler 2018.08 Aug 17 2018
# Start time: 11:16:20 on Apr 12,2021
# vcom -reportprogress 30 -work work ../src/fpuvhdl/multiplier/fpmul_stage3_struct.vhd 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Compiling entity FPmul_stage3
# -- Compiling architecture struct of FPmul_stage3
# -- Loading package STD_LOGIC_UNSIGNED
# -- Loading entity FPnormalize
# -- Loading entity FPround
# End time: 11:16:21 on Apr 12,2021, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# QuestaSim-64 vcom 10.7c Compiler 2018.08 Aug 17 2018
# Start time: 11:16:21 on Apr 12,2021
# vcom -reportprogress 30 -work work ../src/fpuvhdl/multiplier/fpmul_stage4_struct.vhd 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Compiling entity FPmul_stage4
# -- Compiling architecture struct of FPmul_stage4
# -- Loading package STD_LOGIC_UNSIGNED
# -- Loading entity FPnormalize
# -- Loading entity PackFP
# End time: 11:16:21 on Apr 12,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# QuestaSim-64 vcom 10.7c Compiler 2018.08 Aug 17 2018
# Start time: 11:16:21 on Apr 12,2021
# vcom -reportprogress 30 -work work ../src/fpuvhdl/multiplier/fpmul_pipeline.vhd 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Compiling entity FPmul
# -- Compiling architecture pipeline of FPmul
# -- Loading entity FPmul_stage1
# -- Loading entity FPmul_stage2
# -- Loading entity FPmul_stage3
# -- Loading entity FPmul_stage4
# End time: 11:16:22 on Apr 12,2021, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# QuestaSim-64 vcom 10.7c Compiler 2018.08 Aug 17 2018
# Start time: 11:16:22 on Apr 12,2021
# vcom -reportprogress 30 -work work ../src/HA.vhd 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Compiling entity HA
# -- Compiling architecture struct of HA
# End time: 11:16:22 on Apr 12,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# QuestaSim-64 vcom 10.7c Compiler 2018.08 Aug 17 2018
# Start time: 11:16:22 on Apr 12,2021
# vcom -reportprogress 30 -work work ../src/FA.vhd 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Compiling entity FA
# -- Compiling architecture struct of FA
# End time: 11:16:23 on Apr 12,2021, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# QuestaSim-64 vcom 10.7c Compiler 2018.08 Aug 17 2018
# Start time: 11:16:23 on Apr 12,2021
# vcom -reportprogress 30 -work work ../src/MBE.vhd 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package NUMERIC_STD
# -- Compiling entity MBE_n
# -- Compiling architecture behavioural of MBE_n
# End time: 11:16:23 on Apr 12,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# QuestaSim-64 vcom 10.7c Compiler 2018.08 Aug 17 2018
# Start time: 11:16:23 on Apr 12,2021
# vcom -reportprogress 30 -work work ../src/MBE_mult.vhd 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package NUMERIC_STD
# -- Compiling entity MBE_mult
# -- Compiling architecture behavioural of MBE_mult
# End time: 11:16:24 on Apr 12,2021, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# QuestaSim-64 vlog 10.7c Compiler 2018.08 Aug 17 2018
# Start time: 11:16:24 on Apr 12,2021
# vlog -reportprogress 300 -sv ../tb/top.sv 
# ** Note: (vlog-2286) ../tb/top.sv(2): Using implicit +incdir+/software/mentor/questa10.7c/questasim/uvm-1.1d/../verilog_src/uvm-1.1d/src from import uvm_pkg
# -- Compiling package top_sv_unit
# -- Importing package mtiUvm.uvm_pkg (uvm-1.1d Built-in)
# ** Warning: ../tb/monitor.sv(49): (vlog-2240) Treating stand-alone use of function 'begin_tr' as an implicit VOID cast.
# ** Warning: ../tb/monitor_out.sv(48): (vlog-2240) Treating stand-alone use of function 'begin_tr' as an implicit VOID cast.
# -- Compiling interface dut_if
# -- Compiling module DUT
# -- Compiling module top
# 
# Top level modules:
# 	top
# End time: 11:16:30 on Apr 12,2021, Elapsed time: 0:00:06
# Errors: 0, Warnings: 2
# vsim top 
# Start time: 11:16:30 on Apr 12,2021
# ** Note: (vsim-3812) Design is being optimized...
# ** Warning: ../tb/top.sv(39): (vopt-2241) Connection width does not match width of port 'state'. The port definition is at: ../src/DUT.sv(1).
# ** Warning: ../tb/monitor.sv(49): (vopt-2240) Treating stand-alone use of function 'begin_tr' as an implicit VOID cast.
# ** Warning: ../tb/monitor_out.sv(48): (vopt-2240) Treating stand-alone use of function 'begin_tr' as an implicit VOID cast.
# Loading sv_std.std
# Loading mtiUvm.uvm_pkg
# Loading work.top_sv_unit(fast)
# Loading work.top(fast)
# Loading work.DUT(fast)
# Loading mtiUvm.questa_uvm_pkg(fast)
# Loading work.dut_if(fast)
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.std_logic_arith(body)
# Loading work.fpmul(pipeline)#1
# Loading work.fpmul_stage1(struct)#1
# Loading work.unpackfp(unpackfp)#1
# Loading work.fpmul_stage2(struct)#1
# Loading ieee.numeric_std(body)
# Loading work.mbe_mult(behavioural)#1
# Loading work.mbe_n(behavioural)#1
# Loading ieee.std_logic_unsigned(body)
# Loading work.fpmul_stage3(struct)#1
# Loading work.fpnormalize(fpnormalize)#1
# Loading work.fpround(fpround)#1
# Loading work.fpmul_stage4(struct)#1
# Loading work.packfp(packfp)#1
# ** Warning: (vsim-3015) [PCDPC] - Port size (3) does not match connection size (2) for port 'state'. The port definition is at: ../src/DUT.sv(1).
#    Time: 0 ns  Iteration: 0  Instance: /top/sum File: ../tb/top.sv Line: 39
# ** Warning: (vsim-3839) Variable '/top/out/data', driven via a port connection, is multiply driven. See ../src/DUT.sv(3).
#    Time: 0 ns  Iteration: 0  Instance: /top/sum File: ../src/DUT.sv Line: 12
# ** Warning: (vsim-3764) Stand-alone call to function 'begin_tr' treated as implicit void cast.
#    Time: 0 ns  Iteration: 0  Region: /top_sv_unit::driver File: ../tb/driver.sv Line: 67
# Loading /software/mentor/questa10.7c/questasim/uvm-1.1d/linux_x86_64/uvm_dpi.so
# ----------------------------------------------------------------
# UVM-1.1d
# (C) 2007-2013 Mentor Graphics Corporation
# (C) 2007-2013 Cadence Design Systems, Inc.
# (C) 2006-2013 Synopsys, Inc.
# (C) 2011-2013 Cypress Semiconductor Corp.
# ----------------------------------------------------------------
# 
#   ***********       IMPORTANT RELEASE NOTES         ************
# 
#   You are using a version of the UVM library that has been compiled
#   with `UVM_NO_DEPRECATED undefined.
#   See http://www.eda.org/svdb/view.php?id=3313 for more details.
# 
#   You are using a version of the UVM library that has been compiled
#   with `UVM_OBJECT_MUST_HAVE_CONSTRUCTOR undefined.
#   See http://www.eda.org/svdb/view.php?id=3770 for more details.
# 
#       (Specify +UVM_NO_RELNOTES to turn off this notice)
# 
# UVM_INFO verilog_src/questa_uvm_pkg-1.2/src/questa_uvm_pkg.sv(215) @ 0: reporter [Questa UVM] QUESTA_UVM-1.2.3
# UVM_INFO verilog_src/questa_uvm_pkg-1.2/src/questa_uvm_pkg.sv(216) @ 0: reporter [Questa UVM]  questa_uvm::init(+struct)
# ** Warning: There is an 'U'|'X'|'W'|'Z'|'-' in an arithmetic operand, the result will be 'X'(es).
#    Time: 0 ns  Iteration: 0  Instance: /top/sum/fpmul_under_test/I3/I11
# ** Warning: There is an 'U'|'X'|'W'|'Z'|'-' in an arithmetic operand, the result will be 'X'(es).
#    Time: 0 ns  Iteration: 0  Instance: /top/sum/fpmul_under_test/I3/I11
# ** Warning: There is an 'U'|'X'|'W'|'Z'|'-' in an arithmetic operand, the result will be 'X'(es).
#    Time: 0 ns  Iteration: 0  Instance: /top/sum/fpmul_under_test/I2
# ** Warning: There is an 'U'|'X'|'W'|'Z'|'-' in an arithmetic operand, the result will be 'X'(es).
#    Time: 0 ns  Iteration: 0  Instance: /top/sum/fpmul_under_test/I2
# ** Warning: There is an 'U'|'X'|'W'|'Z'|'-' in an arithmetic operand, the result will be 'X'(es).
#    Time: 0 ns  Iteration: 0  Instance: /top/sum/fpmul_under_test/I2
# ** Warning: There is an 'U'|'X'|'W'|'Z'|'-' in an arithmetic operand, the result will be 'X'(es).
#    Time: 0 ns  Iteration: 0  Instance: /top/sum/fpmul_under_test/I2
# ** Warning: There is an 'U'|'X'|'W'|'Z'|'-' in an arithmetic operand, the result will be 'X'(es).
#    Time: 0 ns  Iteration: 0  Instance: /top/sum/fpmul_under_test/I2
# UVM_INFO @ 0: reporter [RNTST] Running test simple_test...
# ** Warning: There is an 'U'|'X'|'W'|'Z'|'-' in an arithmetic operand, the result will be 'X'(es).
#    Time: 0 ns  Iteration: 1  Instance: /top/sum/fpmul_under_test/I2
# ** Warning: There is an 'U'|'X'|'W'|'Z'|'-' in an arithmetic operand, the result will be 'X'(es).
#    Time: 0 ns  Iteration: 1  Instance: /top/sum/fpmul_under_test/I2
# ** Warning: There is an 'U'|'X'|'W'|'Z'|'-' in an arithmetic operand, the result will be 'X'(es).
#    Time: 0 ns  Iteration: 1  Instance: /top/sum/fpmul_under_test/I2
# ** Warning: There is an 'U'|'X'|'W'|'Z'|'-' in an arithmetic operand, the result will be 'X'(es).
#    Time: 0 ns  Iteration: 1  Instance: /top/sum/fpmul_under_test/I2
# ** Warning: There is an 'U'|'X'|'W'|'Z'|'-' in an arithmetic operand, the result will be 'X'(es).
#    Time: 5 ns  Iteration: 3  Instance: /top/sum/fpmul_under_test/I3/I11
# ** Warning: There is an 'U'|'X'|'W'|'Z'|'-' in an arithmetic operand, the result will be 'X'(es).
#    Time: 5 ns  Iteration: 3  Instance: /top/sum/fpmul_under_test/I3/I11
# ** Warning: There is an 'U'|'X'|'W'|'Z'|'-' in an arithmetic operand, the result will be 'X'(es).
#    Time: 15 ns  Iteration: 2  Instance: /top/sum/fpmul_under_test/I2
# ** Warning: There is an 'U'|'X'|'W'|'Z'|'-' in an arithmetic operand, the result will be 'X'(es).
#    Time: 15 ns  Iteration: 2  Instance: /top/sum/fpmul_under_test/I2
# ** Warning: There is an 'U'|'X'|'W'|'Z'|'-' in an arithmetic operand, the result will be 'X'(es).
#    Time: 15 ns  Iteration: 2  Instance: /top/sum/fpmul_under_test/I2
# ** Warning: There is an 'U'|'X'|'W'|'Z'|'-' in an arithmetic operand, the result will be 'X'(es).
#    Time: 15 ns  Iteration: 2  Instance: /top/sum/fpmul_under_test/I2
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 0, input B = 0, output OUT = 0
# refmod: input A = 00000000000000000000000000000000, input B = 00000000000000000000000000000000, output OUT = 00000000000000000000000000000000
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 0, input B = 0, output OUT = 0
# dadda_mult: input A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, input B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, output OUT = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# FPU_mult: SEND
# UVM_INFO @ 65: reporter [MISCMP] Miscompare for exp.data: lhs = 'h0 : rhs = 'h0xxxxxxxx
# UVM_INFO @ 65: reporter [MISCMP] 1 Miscompare(s) for object tr@825 vs. exp@617
# UVM_WARNING @ 65: uvm_test_top.env_h.comp [Comparator Mismatch] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 1.04016e-12, input B = 1.15627e-32, output OUT = 1.26117e-44
# refmod: input A = 00101011100100100110001111011001, input B = 00001010011100000010010111111101, output OUT = 00000000000000000000000000001001
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 1.04016e-12, input B = 1.15627e-32, output OUT = 0
# dadda_mult: input A = 00101011100100100110001111011001, input B = 00001010011100000010010111111101, output OUT = 00000000000000000000000000000000
# FPU_mult: SEND
# UVM_INFO @ 105: reporter [MISCMP] Miscompare for exp.data: lhs = 'h9 : rhs = 'h0
# UVM_INFO @ 105: reporter [MISCMP] 1 Miscompare(s) for object tr@825 vs. exp@617
# UVM_WARNING @ 105: uvm_test_top.env_h.comp [Comparator Mismatch] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 4.76062e-36, input B = -4.96281e-19, output OUT = -0
# refmod: input A = 00000100110010100111111010001011, input B = 10100001000100100111100111110100, output OUT = 10000000000000000000000000000000
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 4.76062e-36, input B = -4.96281e-19, output OUT = -0
# dadda_mult: input A = 00000100110010100111111010001011, input B = 10100001000100100111100111110100, output OUT = 10000000000000000000000000000000
# FPU_mult: SEND
# UVM_INFO @ 145: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 1.38734e-29, input B = -3.63466e+21, output OUT = -5.04252e-08
# refmod: input A = 00001111100011001011000101110100, input B = 11100011010001010000100100011010, output OUT = 10110011010110001001001100011110
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 1.38734e-29, input B = -3.63466e+21, output OUT = -5.04252e-08
# dadda_mult: input A = 00001111100011001011000101110100, input B = 11100011010001010000100100011010, output OUT = 10110011010110001001001100011110
# FPU_mult: SEND
# UVM_INFO @ 185: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -5.88061e+37, input B = -7.03725e+31, output OUT = inf
# refmod: input A = 11111110001100001111011010001100, input B = 11110100010111100000111001101111, output OUT = 01111111100000000000000000000000
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -5.88061e+37, input B = -7.03725e+31, output OUT = inf
# dadda_mult: input A = 11111110001100001111011010001100, input B = 11110100010111100000111001101111, output OUT = 01111111100000000000000000000000
# FPU_mult: SEND
# UVM_INFO @ 225: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -9.40361e-20, input B = -1.12375e+18, output OUT = 0.105673
# refmod: input A = 10011111110111100000100101001111, input B = 11011101011110011000010111101101, output OUT = 00111101110110000110101100110110
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -9.40361e-20, input B = -1.12375e+18, output OUT = 0.105673
# dadda_mult: input A = 10011111110111100000100101001111, input B = 11011101011110011000010111101101, output OUT = 00111101110110000110101100110110
# FPU_mult: SEND
# UVM_INFO @ 265: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 6.69645e-34, input B = 48.4492, output OUT = 3.24437e-32
# refmod: input A = 00001000010111101000011100010110, input B = 01000010010000011100101111110100, output OUT = 00001011001010000111010100100001
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 6.69645e-34, input B = 48.4492, output OUT = 3.24437e-32
# dadda_mult: input A = 00001000010111101000011100010110, input B = 01000010010000011100101111110100, output OUT = 00001011001010000111010100100001
# FPU_mult: SEND
# UVM_INFO @ 305: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -5.06963e+19, input B = -2.4033e+26, output OUT = inf
# refmod: input A = 11100000001011111110001101011011, input B = 11101011010001101100101111001101, output OUT = 01111111100000000000000000000000
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -5.06963e+19, input B = -2.4033e+26, output OUT = inf
# dadda_mult: input A = 11100000001011111110001101011011, input B = 11101011010001101100101111001101, output OUT = 01111111100000000000000000000000
# FPU_mult: SEND
# UVM_INFO @ 345: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -3.64703e-25, input B = -493794, output OUT = 1.80088e-19
# refmod: input A = 10010110111000011011110110000001, input B = 11001000111100010001110000110000, output OUT = 00100000010101001001110001000001
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -3.64703e-25, input B = -493794, output OUT = 1.80088e-19
# dadda_mult: input A = 10010110111000011011110110000001, input B = 11001000111100010001110000110000, output OUT = 00100000010101001001110001000001
# FPU_mult: SEND
# UVM_INFO @ 385: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -5.01561e+23, input B = -9.6181e+08, output OUT = 4.82407e+32
# refmod: input A = 11100110110101000110101101011100, input B = 11001110011001010101000000111101, output OUT = 01110101101111100100011010011101
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -5.01561e+23, input B = -9.6181e+08, output OUT = 4.82407e+32
# dadda_mult: input A = 11100110110101000110101101011100, input B = 11001110011001010101000000111101, output OUT = 01110101101111100100011010011101
# FPU_mult: SEND
# UVM_INFO @ 425: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -7.53793e-31, input B = -1.47655e-10, output OUT = 1.11301e-40
# refmod: input A = 10001101011101001001111010100100, input B = 10101111001000100101100101001001, output OUT = 00000000000000010011011001000011
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -7.53793e-31, input B = -1.47655e-10, output OUT = 0
# dadda_mult: input A = 10001101011101001001111010100100, input B = 10101111001000100101100101001001, output OUT = 00000000000000000000000000000000
# FPU_mult: SEND
# UVM_INFO @ 465: reporter [MISCMP] Miscompare for exp.data: lhs = 'h13643 : rhs = 'h0
# UVM_INFO @ 465: reporter [MISCMP] 1 Miscompare(s) for object tr@825 vs. exp@617
# UVM_WARNING @ 465: uvm_test_top.env_h.comp [Comparator Mismatch] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 1.29274e+17, input B = 1.15489e+13, output OUT = 1.49297e+30
# refmod: input A = 01011011111001011010001011111001, input B = 01010101001010000000111011110010, output OUT = 01110001100101101100000001011011
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 1.29274e+17, input B = 1.15489e+13, output OUT = 1.49297e+30
# dadda_mult: input A = 01011011111001011010001011111001, input B = 01010101001010000000111011110010, output OUT = 01110001100101101100000001011011
# FPU_mult: SEND
# UVM_INFO @ 505: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -3.33385e+06, input B = -1.24973e+18, output OUT = 4.16642e+24
# refmod: input A = 11001010010010110111101101101101, input B = 11011101100010101011111110001000, output OUT = 01101000010111001001000110001100
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -3.33385e+06, input B = -1.24973e+18, output OUT = 4.16642e+24
# dadda_mult: input A = 11001010010010110111101101101101, input B = 11011101100010101011111110001000, output OUT = 01101000010111001001000110001100
# FPU_mult: SEND
# UVM_INFO @ 545: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 1.82071e+23, input B = 2.34183e-17, output OUT = 4.2638e+06
# refmod: input A = 01100110000110100011100001100011, input B = 00100011110101111111111011100011, output OUT = 01001010100000100001111011101000
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 1.82071e+23, input B = 2.34183e-17, output OUT = 4.2638e+06
# dadda_mult: input A = 01100110000110100011100001100011, input B = 00100011110101111111111011100011, output OUT = 01001010100000100001111011101000
# FPU_mult: SEND
# UVM_INFO @ 585: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -1.03025e+12, input B = 2.35713e-26, output OUT = -2.42844e-14
# refmod: input A = 11010011011011111101111111100011, input B = 00010100111010010111000001010011, output OUT = 10101000110110101011110000000101
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -1.03025e+12, input B = 2.35713e-26, output OUT = -2.42844e-14
# dadda_mult: input A = 11010011011011111101111111100011, input B = 00010100111010010111000001010011, output OUT = 10101000110110101011110000000101
# FPU_mult: SEND
# UVM_INFO @ 625: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 1.18062e-35, input B = 2.05618e+32, output OUT = 0.00242757
# refmod: input A = 00000101011110110001011100100001, input B = 01110101001000100011010000111001, output OUT = 00111011000111110001011111011011
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 1.18062e-35, input B = 2.05618e+32, output OUT = 0.00242757
# dadda_mult: input A = 00000101011110110001011100100001, input B = 01110101001000100011010000111001, output OUT = 00111011000111110001011111011011
# FPU_mult: SEND
# UVM_INFO @ 665: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -1.00818e-05, input B = -2.04132e-22, output OUT = 2.05802e-27
# refmod: input A = 10110111001010010010010100011110, input B = 10011011011101101100011111000110, output OUT = 00010011001000110000110110101010
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -1.00818e-05, input B = -2.04132e-22, output OUT = 2.05802e-27
# dadda_mult: input A = 10110111001010010010010100011110, input B = 10011011011101101100011111000110, output OUT = 00010011001000110000110110101010
# FPU_mult: SEND
# UVM_INFO @ 705: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 1.72768e-07, input B = 6.83392e-17, output OUT = 1.18068e-23
# refmod: input A = 00110100001110011000001000100001, input B = 00100100100111011001010001011011, output OUT = 00011001011001000110000010011111
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 1.72768e-07, input B = 6.83392e-17, output OUT = 1.18068e-23
# dadda_mult: input A = 00110100001110011000001000100001, input B = 00100100100111011001010001011011, output OUT = 00011001011001000110000010011111
# FPU_mult: SEND
# UVM_INFO @ 745: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 1.16636e+18, input B = 2.32097, output OUT = 2.70708e+18
# refmod: input A = 01011101100000010111110111011010, input B = 01000000000101001000101011010010, output OUT = 01011110000101100100010111110100
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 1.16636e+18, input B = 2.32097, output OUT = 2.70708e+18
# dadda_mult: input A = 01011101100000010111110111011010, input B = 01000000000101001000101011010010, output OUT = 01011110000101100100010111110100
# FPU_mult: SEND
# UVM_INFO @ 785: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 1.08316e+22, input B = 5.28216e-23, output OUT = 0.572143
# refmod: input A = 01100100000100101100101110111111, input B = 00011010011111110110110111101110, output OUT = 00111111000100100111011111111100
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 1.08316e+22, input B = 5.28216e-23, output OUT = 0.572143
# dadda_mult: input A = 01100100000100101100101110111111, input B = 00011010011111110110110111101110, output OUT = 00111111000100100111011111111100
# FPU_mult: SEND
# UVM_INFO @ 825: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 433072, input B = -9.33241e+33, output OUT = -inf
# refmod: input A = 01001000110100110111010111111111, input B = 11110111111001100000111111000011, output OUT = 11111111100000000000000000000000
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 433072, input B = -9.33241e+33, output OUT = -inf
# dadda_mult: input A = 01001000110100110111010111111111, input B = 11110111111001100000111111000011, output OUT = 11111111100000000000000000000000
# FPU_mult: SEND
# UVM_INFO @ 865: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -1.36171e-21, input B = 2.07094e-37, output OUT = -0
# refmod: input A = 10011100110011011100011010010001, input B = 00000010100011001111000011011011, output OUT = 10000000000000000000000000000000
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -1.36171e-21, input B = 2.07094e-37, output OUT = -0
# dadda_mult: input A = 10011100110011011100011010010001, input B = 00000010100011001111000011011011, output OUT = 10000000000000000000000000000000
# FPU_mult: SEND
# UVM_INFO @ 905: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -1.86272e-22, input B = -3.17227e+09, output OUT = 5.90906e-13
# refmod: input A = 10011011011000010011000001101011, input B = 11001111001111010001010100000110, output OUT = 00101011001001100101001100111101
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -1.86272e-22, input B = -3.17227e+09, output OUT = 5.90906e-13
# dadda_mult: input A = 10011011011000010011000001101011, input B = 11001111001111010001010100000110, output OUT = 00101011001001100101001100111101
# FPU_mult: SEND
# UVM_INFO @ 945: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -1.61872e+07, input B = 1.55057e+36, output OUT = -inf
# refmod: input A = 11001011011101101111111101000101, input B = 01111011100101010101000001100111, output OUT = 11111111100000000000000000000000
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -1.61872e+07, input B = 1.55057e+36, output OUT = -inf
# dadda_mult: input A = 11001011011101101111111101000101, input B = 01111011100101010101000001100111, output OUT = 11111111100000000000000000000000
# FPU_mult: SEND
# UVM_INFO @ 985: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -1.57495e-15, input B = -4.62579e+21, output OUT = 7.28538e+06
# refmod: input A = 10100110111000101111100101010011, input B = 11100011011110101100001111000111, output OUT = 01001010110111100101010100001111
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -1.57495e-15, input B = -4.62579e+21, output OUT = 7.28538e+06
# dadda_mult: input A = 10100110111000101111100101010011, input B = 11100011011110101100001111000111, output OUT = 01001010110111100101010100001111
# FPU_mult: SEND
# UVM_INFO @ 1025: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -5.69132e-07, input B = -2.84815e+24, output OUT = 1.62097e+18
# refmod: input A = 10110101000110001100011001101111, input B = 11101000000101101100011110011100, output OUT = 01011101101100111111011011001001
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -5.69132e-07, input B = -2.84815e+24, output OUT = 1.62097e+18
# dadda_mult: input A = 10110101000110001100011001101111, input B = 11101000000101101100011110011100, output OUT = 01011101101100111111011011001001
# FPU_mult: SEND
# UVM_INFO @ 1065: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 3.89244e+25, input B = -1.54406e-31, output OUT = -6.01016e-06
# refmod: input A = 01101010000000001100101001000101, input B = 10001100010010000110111000100110, output OUT = 10110110110010011010101011100000
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 3.89244e+25, input B = -1.54406e-31, output OUT = -6.01016e-06
# dadda_mult: input A = 01101010000000001100101001000101, input B = 10001100010010000110111000100110, output OUT = 10110110110010011010101011100000
# FPU_mult: SEND
# UVM_INFO @ 1105: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -3.2556e-05, input B = 4.10021e-26, output OUT = -1.33487e-30
# refmod: input A = 10111000000010001000110011000110, input B = 00010101010010110000100001100010, output OUT = 10001101110110001001100000110011
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -3.2556e-05, input B = 4.10021e-26, output OUT = -1.33487e-30
# dadda_mult: input A = 10111000000010001000110011000110, input B = 00010101010010110000100001100010, output OUT = 10001101110110001001100000110011
# FPU_mult: SEND
# UVM_INFO @ 1145: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -1.4876e+25, input B = 3.06215e+11, output OUT = -4.55526e+36
# refmod: input A = 11101001010001001110000111110110, input B = 01010010100011101001011110100011, output OUT = 11111100010110110101001111101010
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -1.4876e+25, input B = 3.06215e+11, output OUT = -4.55526e+36
# dadda_mult: input A = 11101001010001001110000111110110, input B = 01010010100011101001011110100011, output OUT = 11111100010110110101001111101010
# FPU_mult: SEND
# UVM_INFO @ 1185: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 9.61412e+35, input B = 0.000726692, output OUT = 6.9865e+32
# refmod: input A = 01111011001110010010100101000010, input B = 00111010001111100111111101111110, output OUT = 01110110000010011100100011010110
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 9.61412e+35, input B = 0.000726692, output OUT = 6.9865e+32
# dadda_mult: input A = 01111011001110010010100101000010, input B = 00111010001111100111111101111110, output OUT = 01110110000010011100100011010110
# FPU_mult: SEND
# UVM_INFO @ 1225: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 2.39373e-25, input B = 0.0672375, output OUT = 1.60948e-26
# refmod: input A = 00010110100101000010101000100010, input B = 00111101100010011011001111010101, output OUT = 00010100100111110110010101000010
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 2.39373e-25, input B = 0.0672375, output OUT = 1.60948e-26
# dadda_mult: input A = 00010110100101000010101000100010, input B = 00111101100010011011001111010101, output OUT = 00010100100111110110010101000010
# FPU_mult: SEND
# UVM_INFO @ 1265: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -5.75227e+32, input B = -4.62364e-35, output OUT = 0.0265964
# refmod: input A = 11110101111000101110001100011101, input B = 10000110011101011101010110110100, output OUT = 00111100110110011110000011000001
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -5.75227e+32, input B = -4.62364e-35, output OUT = 0.0265964
# dadda_mult: input A = 11110101111000101110001100011101, input B = 10000110011101011101010110110100, output OUT = 00111100110110011110000011000001
# FPU_mult: SEND
# UVM_INFO @ 1305: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 9.52858e-11, input B = -862.034, output OUT = -8.21396e-08
# refmod: input A = 00101110110100011000100100100100, input B = 11000100010101111000001000101111, output OUT = 10110011101100000110010010111011
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 9.52858e-11, input B = -862.034, output OUT = -8.21396e-08
# dadda_mult: input A = 00101110110100011000100100100100, input B = 11000100010101111000001000101111, output OUT = 10110011101100000110010010111011
# FPU_mult: SEND
# UVM_INFO @ 1345: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -3.72745e-06, input B = -3.66089e-14, output OUT = 1.36458e-19
# refmod: input A = 10110110011110100010010100100011, input B = 10101001001001001101111100101010, output OUT = 00100000001000010001100111011010
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -3.72745e-06, input B = -3.66089e-14, output OUT = 1.36458e-19
# dadda_mult: input A = 10110110011110100010010100100011, input B = 10101001001001001101111100101010, output OUT = 00100000001000010001100111011010
# FPU_mult: SEND
# UVM_INFO @ 1385: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 1.67703e+17, input B = 1.44205e+24, output OUT = inf
# refmod: input A = 01011100000101001111001101011011, input B = 01100111100110001010111011100101, output OUT = 01111111100000000000000000000000
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 1.67703e+17, input B = 1.44205e+24, output OUT = inf
# dadda_mult: input A = 01011100000101001111001101011011, input B = 01100111100110001010111011100101, output OUT = 01111111100000000000000000000000
# FPU_mult: SEND
# UVM_INFO @ 1425: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 1.46815e+32, input B = -5.62308e-19, output OUT = -8.2555e+13
# refmod: input A = 01110100111001111010000111101011, input B = 10100001001001011111011011010000, output OUT = 11010110100101100010101010101110
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 1.46815e+32, input B = -5.62308e-19, output OUT = -8.2555e+13
# dadda_mult: input A = 01110100111001111010000111101011, input B = 10100001001001011111011011010000, output OUT = 11010110100101100010101010101110
# FPU_mult: SEND
# UVM_INFO @ 1465: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 5.71672e+23, input B = 5.98072e-13, output OUT = 3.41901e+11
# refmod: input A = 01100110111100100001110011011000, input B = 00101011001010000101011110101001, output OUT = 01010010100111110011010111010101
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 5.71672e+23, input B = 5.98072e-13, output OUT = 3.41901e+11
# dadda_mult: input A = 01100110111100100001110011011000, input B = 00101011001010000101011110101001, output OUT = 01010010100111110011010111010101
# FPU_mult: SEND
# UVM_INFO @ 1505: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 4.42874e-30, input B = 1.06659e+19, output OUT = 4.72364e-11
# refmod: input A = 00001110101100111010011010101101, input B = 01011111000101000000010011000101, output OUT = 00101110010011111011111101101010
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 4.42874e-30, input B = 1.06659e+19, output OUT = 4.72364e-11
# dadda_mult: input A = 00001110101100111010011010101101, input B = 01011111000101000000010011000101, output OUT = 00101110010011111011111101101010
# FPU_mult: SEND
# UVM_INFO @ 1545: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 7.399e+20, input B = -0.414403, output OUT = -3.06617e+20
# refmod: input A = 01100010001000000111000010110001, input B = 10111110110101000010110010011011, output OUT = 11100001100001001111100101000111
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 7.399e+20, input B = -0.414403, output OUT = -3.06617e+20
# dadda_mult: input A = 01100010001000000111000010110001, input B = 10111110110101000010110010011011, output OUT = 11100001100001001111100101000111
# FPU_mult: SEND
# UVM_INFO @ 1585: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -2.69824e+26, input B = 3.48986e+06, output OUT = -9.41648e+32
# refmod: input A = 11101011010111110011000110000100, input B = 01001010010101010000000100000011, output OUT = 11110110001110011011010100010101
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -2.69824e+26, input B = 3.48986e+06, output OUT = -9.41648e+32
# dadda_mult: input A = 11101011010111110011000110000100, input B = 01001010010101010000000100000011, output OUT = 11110110001110011011010100010101
# FPU_mult: SEND
# UVM_INFO @ 1625: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 3.56668e+20, input B = 1.47448e-09, output OUT = 5.25901e+11
# refmod: input A = 01100001100110101010111000011110, input B = 00110000110010101010011011000010, output OUT = 01010010111101001110010001001100
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 3.56668e+20, input B = 1.47448e-09, output OUT = 5.25901e+11
# dadda_mult: input A = 01100001100110101010111000011110, input B = 00110000110010101010011011000010, output OUT = 01010010111101001110010001001100
# FPU_mult: SEND
# UVM_INFO @ 1665: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 2.62348e-29, input B = -5.89357e-37, output OUT = -0
# refmod: input A = 00010000000001010000011010111100, input B = 10000011010010001000110001000100, output OUT = 10000000000000000000000000000000
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 2.62348e-29, input B = -5.89357e-37, output OUT = -0
# dadda_mult: input A = 00010000000001010000011010111100, input B = 10000011010010001000110001000100, output OUT = 10000000000000000000000000000000
# FPU_mult: SEND
# UVM_INFO @ 1705: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 29.9365, input B = -7.29497e+34, output OUT = -2.18386e+36
# refmod: input A = 01000001111011110111111000001001, input B = 11111001011000001100101100110001, output OUT = 11111011110100100100110001011111
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 29.9365, input B = -7.29497e+34, output OUT = -2.18386e+36
# dadda_mult: input A = 01000001111011110111111000001001, input B = 11111001011000001100101100110001, output OUT = 11111011110100100100110001011111
# FPU_mult: SEND
# UVM_INFO @ 1745: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -1.23215e+38, input B = -7.69076e+33, output OUT = inf
# refmod: input A = 11111110101110010110010010100100, input B = 11110111101111011001011110000010, output OUT = 01111111100000000000000000000000
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -1.23215e+38, input B = -7.69076e+33, output OUT = inf
# dadda_mult: input A = 11111110101110010110010010100100, input B = 11110111101111011001011110000010, output OUT = 01111111100000000000000000000000
# FPU_mult: SEND
# UVM_INFO @ 1785: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 1.99084e+31, input B = 0.00442937, output OUT = 8.81818e+28
# refmod: input A = 01110011011110110100011110010010, input B = 00111011100100010010010001000100, output OUT = 01101111100011100111011100100011
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 1.99084e+31, input B = 0.00442937, output OUT = 8.81818e+28
# dadda_mult: input A = 01110011011110110100011110010010, input B = 00111011100100010010010001000100, output OUT = 01101111100011100111011100100011
# FPU_mult: SEND
# UVM_INFO @ 1825: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -3.81968e+29, input B = 55862.9, output OUT = -2.13379e+34
# refmod: input A = 11110000100110100100011010011011, input B = 01000111010110100011011011101010, output OUT = 11111000100000111000000100111000
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -3.81968e+29, input B = 55862.9, output OUT = -2.13379e+34
# dadda_mult: input A = 11110000100110100100011010011011, input B = 01000111010110100011011011101010, output OUT = 11111000100000111000000100111000
# FPU_mult: SEND
# UVM_INFO @ 1865: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -1.92524e+25, input B = 1.29255e-31, output OUT = -2.48848e-06
# refmod: input A = 11101001011111101100110111000011, input B = 00001100001001111100100001100010, output OUT = 10110110001001101111111110101101
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -1.92524e+25, input B = 1.29255e-31, output OUT = -2.48848e-06
# dadda_mult: input A = 11101001011111101100110111000011, input B = 00001100001001111100100001100010, output OUT = 10110110001001101111111110101101
# FPU_mult: SEND
# UVM_INFO @ 1905: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 2.08856e+29, input B = -13.7701, output OUT = -2.87597e+30
# refmod: input A = 01110000001010001011011001101110, input B = 11000001010111000101001001110001, output OUT = 11110010000100010011001100011011
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 2.08856e+29, input B = -13.7701, output OUT = -2.87597e+30
# dadda_mult: input A = 01110000001010001011011001101110, input B = 11000001010111000101001001110001, output OUT = 11110010000100010011001100011011
# FPU_mult: SEND
# UVM_INFO @ 1945: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 2.96425e+25, input B = 1.03876e+08, output OUT = 3.07913e+33
# refmod: input A = 01101001110001000010100001001110, input B = 01001100110001100010000010000111, output OUT = 01110111000101111101000000011001
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 2.96425e+25, input B = 1.03876e+08, output OUT = 3.07913e+33
# dadda_mult: input A = 01101001110001000010100001001110, input B = 01001100110001100010000010000111, output OUT = 01110111000101111101000000011001
# FPU_mult: SEND
# UVM_INFO @ 1985: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 2.24566e+13, input B = -4.30619e+14, output OUT = -9.67022e+27
# refmod: input A = 01010101101000110110010010100000, input B = 11010111110000111101001010011110, output OUT = 11101101111110011111100000100111
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 2.24566e+13, input B = -4.30619e+14, output OUT = -9.67022e+27
# dadda_mult: input A = 01010101101000110110010010100000, input B = 11010111110000111101001010011110, output OUT = 11101101111110011111100000100111
# FPU_mult: SEND
# UVM_INFO @ 2025: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 49.9043, input B = 1.23613, output OUT = 61.6881
# refmod: input A = 01000010010001111001110111110110, input B = 00111111100111100011100101110100, output OUT = 01000010011101101100000010010101
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 49.9043, input B = 1.23613, output OUT = 61.6881
# dadda_mult: input A = 01000010010001111001110111110110, input B = 00111111100111100011100101110100, output OUT = 01000010011101101100000010010101
# FPU_mult: SEND
# UVM_INFO @ 2065: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -57.7183, input B = -1.36661e+29, output OUT = 7.88783e+30
# refmod: input A = 11000010011001101101111110000001, input B = 11101111110111001100100110100001, output OUT = 01110010110001110001110111101010
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -57.7183, input B = -1.36661e+29, output OUT = 7.88783e+30
# dadda_mult: input A = 11000010011001101101111110000001, input B = 11101111110111001100100110100001, output OUT = 01110010110001110001110111101010
# FPU_mult: SEND
# UVM_INFO @ 2105: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -0.112122, input B = -5.32733e-24, output OUT = 5.97309e-25
# refmod: input A = 10111101111001011010000000001101, input B = 10011000110011100001011101010010, output OUT = 00010111001110001101101110110101
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -0.112122, input B = -5.32733e-24, output OUT = 5.97309e-25
# dadda_mult: input A = 10111101111001011010000000001101, input B = 10011000110011100001011101010010, output OUT = 00010111001110001101101110110101
# FPU_mult: SEND
# UVM_INFO @ 2145: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -1.08303e+15, input B = -0.246041, output OUT = 2.66468e+14
# refmod: input A = 11011000011101100100000001110000, input B = 10111110011110111111001000010000, output OUT = 01010111011100100101101000000110
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -1.08303e+15, input B = -0.246041, output OUT = 2.66468e+14
# dadda_mult: input A = 11011000011101100100000001110000, input B = 10111110011110111111001000010000, output OUT = 01010111011100100101101000000110
# FPU_mult: SEND
# UVM_INFO @ 2185: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 3.25512e-37, input B = -2.04613e-21, output OUT = -0
# refmod: input A = 00000010110111011000100000100001, input B = 10011101000110101001100111011011, output OUT = 10000000000000000000000000000000
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 3.25512e-37, input B = -2.04613e-21, output OUT = -0
# dadda_mult: input A = 00000010110111011000100000100001, input B = 10011101000110101001100111011011, output OUT = 10000000000000000000000000000000
# FPU_mult: SEND
# UVM_INFO @ 2225: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 2.01808e-36, input B = -1.52855e-25, output OUT = -0
# refmod: input A = 00000100001010111010110111111001, input B = 10010110001111010011100111001100, output OUT = 10000000000000000000000000000000
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 2.01808e-36, input B = -1.52855e-25, output OUT = -0
# dadda_mult: input A = 00000100001010111010110111111001, input B = 10010110001111010011100111001100, output OUT = 10000000000000000000000000000000
# FPU_mult: SEND
# UVM_INFO @ 2265: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 7.47156e+31, input B = 2.21536e+09, output OUT = inf
# refmod: input A = 01110100011010111100001011001101, input B = 01001111000001000000101111001001, output OUT = 01111111100000000000000000000000
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 7.47156e+31, input B = 2.21536e+09, output OUT = inf
# dadda_mult: input A = 01110100011010111100001011001101, input B = 01001111000001000000101111001001, output OUT = 01111111100000000000000000000000
# FPU_mult: SEND
# UVM_INFO @ 2305: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 0.0994594, input B = -12790.1, output OUT = -1272.1
# refmod: input A = 00111101110010111011000101100011, input B = 11000110010001111101100010010011, output OUT = 11000100100111110000001100110111
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 0.0994594, input B = -12790.1, output OUT = -1272.1
# dadda_mult: input A = 00111101110010111011000101100011, input B = 11000110010001111101100010010011, output OUT = 11000100100111110000001100110111
# FPU_mult: SEND
# UVM_INFO @ 2345: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 2.85886e-05, input B = -5.17343e-30, output OUT = -1.47901e-34
# refmod: input A = 00110111111011111101000110001001, input B = 10001110110100011101101111101100, output OUT = 10000111010001001001100000010110
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 2.85886e-05, input B = -5.17343e-30, output OUT = -1.47901e-34
# dadda_mult: input A = 00110111111011111101000110001001, input B = 10001110110100011101101111101100, output OUT = 10000111010001001001100000010110
# FPU_mult: SEND
# UVM_INFO @ 2385: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -6.0451e+10, input B = -1.64706e-09, output OUT = 99.5666
# refmod: input A = 11010001011000010011001010001100, input B = 10110000111000100101111011011101, output OUT = 01000010110001110010001000010011
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -6.0451e+10, input B = -1.64706e-09, output OUT = 99.5666
# dadda_mult: input A = 11010001011000010011001010001100, input B = 10110000111000100101111011011101, output OUT = 01000010110001110010001000010011
# FPU_mult: SEND
# UVM_INFO @ 2425: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -26624.2, input B = 1.09256e+24, output OUT = -2.90885e+28
# refmod: input A = 11000110110100000000000001011000, input B = 01100111011001110101101111011110, output OUT = 11101110101110111111101011110100
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -26624.2, input B = 1.09256e+24, output OUT = -2.90885e+28
# dadda_mult: input A = 11000110110100000000000001011000, input B = 01100111011001110101101111011110, output OUT = 11101110101110111111101011110100
# FPU_mult: SEND
# UVM_INFO @ 2465: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 1.46327e-07, input B = -37601.6, output OUT = -0.00550212
# refmod: input A = 00110100000111010001110111110100, input B = 11000111000100101110000110100001, output OUT = 10111011101101000100101100011111
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 1.46327e-07, input B = -37601.6, output OUT = -0.00550212
# dadda_mult: input A = 00110100000111010001110111110100, input B = 11000111000100101110000110100001, output OUT = 10111011101101000100101100011111
# FPU_mult: SEND
# UVM_INFO @ 2505: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 3.95116e+25, input B = -2.15327e+24, output OUT = -inf
# refmod: input A = 01101010000000101011101110011010, input B = 11100111111000111111110001111010, output OUT = 11111111100000000000000000000000
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 3.95116e+25, input B = -2.15327e+24, output OUT = -inf
# dadda_mult: input A = 01101010000000101011101110011010, input B = 11100111111000111111110001111010, output OUT = 11111111100000000000000000000000
# FPU_mult: SEND
# UVM_INFO @ 2545: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 0.000303494, input B = 4.92573e+11, output OUT = 1.49493e+08
# refmod: input A = 00111001100111110001111001001101, input B = 01010010111001010101111101000111, output OUT = 01001101000011101001000101010011
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 0.000303494, input B = 4.92573e+11, output OUT = 1.49493e+08
# dadda_mult: input A = 00111001100111110001111001001101, input B = 01010010111001010101111101000111, output OUT = 01001101000011101001000101010011
# FPU_mult: SEND
# UVM_INFO @ 2585: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -2.78919e+30, input B = 7.91474e-20, output OUT = -2.20757e+11
# refmod: input A = 11110010000011001101000101101101, input B = 00011111101110101110000110101101, output OUT = 11010010010011011001100010011001
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -2.78919e+30, input B = 7.91474e-20, output OUT = -2.20757e+11
# dadda_mult: input A = 11110010000011001101000101101101, input B = 00011111101110101110000110101101, output OUT = 11010010010011011001100010011001
# FPU_mult: SEND
# UVM_INFO @ 2625: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 9.73127e+33, input B = 8.26791e-35, output OUT = 0.804573
# refmod: input A = 01110111111011111110010011111010, input B = 00000110110110111100110001111101, output OUT = 00111111010011011111100010000001
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 9.73127e+33, input B = 8.26791e-35, output OUT = 0.804573
# dadda_mult: input A = 01110111111011111110010011111010, input B = 00000110110110111100110001111101, output OUT = 00111111010011011111100010000001
# FPU_mult: SEND
# UVM_INFO @ 2665: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -1.10837e-16, input B = -3.99393e+29, output OUT = 4.42673e+13
# refmod: input A = 10100100111111111001001001010100, input B = 11110000101000010101000001000011, output OUT = 01010110001000010000101100100111
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -1.10837e-16, input B = -3.99393e+29, output OUT = 4.42673e+13
# dadda_mult: input A = 10100100111111111001001001010100, input B = 11110000101000010101000001000011, output OUT = 01010110001000010000101100100111
# FPU_mult: SEND
# UVM_INFO @ 2705: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 1.8874e-05, input B = 1.29406e+37, output OUT = 2.44242e+32
# refmod: input A = 00110111100111100101001110110000, input B = 01111101000110111100010001011001, output OUT = 01110101010000001010110000110101
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 1.8874e-05, input B = 1.29406e+37, output OUT = 2.44242e+32
# dadda_mult: input A = 00110111100111100101001110110000, input B = 01111101000110111100010001011001, output OUT = 01110101010000001010110000110101
# FPU_mult: SEND
# UVM_INFO @ 2745: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 1.10092e-27, input B = -1.04642e+36, output OUT = -1.15202e+09
# refmod: input A = 00010010101011100111001010010101, input B = 11111011010010011000100001101101, output OUT = 11001110100010010101010011101110
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 1.10092e-27, input B = -1.04642e+36, output OUT = -1.15202e+09
# dadda_mult: input A = 00010010101011100111001010010101, input B = 11111011010010011000100001101101, output OUT = 11001110100010010101010011101110
# FPU_mult: SEND
# UVM_INFO @ 2785: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 2.82503e+26, input B = -1.22544e-15, output OUT = -3.46191e+11
# refmod: input A = 01101011011010011010111001100101, input B = 10100110101100001001101011001100, output OUT = 11010010101000010011010100110011
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 2.82503e+26, input B = -1.22544e-15, output OUT = -3.46191e+11
# dadda_mult: input A = 01101011011010011010111001100101, input B = 10100110101100001001101011001100, output OUT = 11010010101000010011010100110011
# FPU_mult: SEND
# UVM_INFO @ 2825: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 1.73273e-26, input B = 5.43304e-12, output OUT = 9.41403e-38
# refmod: input A = 00010100101010111001101000001101, input B = 00101100101111110010100010000010, output OUT = 00000010000000000010001100010111
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 1.73273e-26, input B = 5.43304e-12, output OUT = 9.41403e-38
# dadda_mult: input A = 00010100101010111001101000001101, input B = 00101100101111110010100010000010, output OUT = 00000010000000000010001100010111
# FPU_mult: SEND
# UVM_INFO @ 2865: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -2.39846e+20, input B = 59.1085, output OUT = -1.4177e+22
# refmod: input A = 11100001010100000000100010010110, input B = 01000010011011000110111100100100, output OUT = 11100100010000000010001000111011
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -2.39846e+20, input B = 59.1085, output OUT = -1.4177e+22
# dadda_mult: input A = 11100001010100000000100010010110, input B = 01000010011011000110111100100100, output OUT = 11100100010000000010001000111011
# FPU_mult: SEND
# UVM_INFO @ 2905: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 1.6145e+33, input B = 5.03864e+11, output OUT = inf
# refmod: input A = 01110110100111110011001110101001, input B = 01010010111010101010000100111100, output OUT = 01111111100000000000000000000000
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 1.6145e+33, input B = 5.03864e+11, output OUT = inf
# dadda_mult: input A = 01110110100111110011001110101001, input B = 01010010111010101010000100111100, output OUT = 01111111100000000000000000000000
# FPU_mult: SEND
# UVM_INFO @ 2945: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -727291, input B = -9.09532e+29, output OUT = 6.61495e+35
# refmod: input A = 11001001001100011000111110101110, input B = 11110001001101111010110110111001, output OUT = 01111010111111101100110001101000
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -727291, input B = -9.09532e+29, output OUT = 6.61495e+35
# dadda_mult: input A = 11001001001100011000111110101110, input B = 11110001001101111010110110111001, output OUT = 01111010111111101100110001101000
# FPU_mult: SEND
# UVM_INFO @ 2985: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -1.10283e-37, input B = 485.757, output OUT = -5.35708e-35
# refmod: input A = 10000010000101100001110000010010, input B = 01000011111100101110000011100100, output OUT = 10000110100011100110101001100111
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -1.10283e-37, input B = 485.757, output OUT = -5.35708e-35
# dadda_mult: input A = 10000010000101100001110000010010, input B = 01000011111100101110000011100100, output OUT = 10000110100011100110101001100111
# FPU_mult: SEND
# UVM_INFO @ 3025: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 1.5489e-06, input B = -1.64214e-06, output OUT = -2.54351e-12
# refmod: input A = 00110101110011111110001111000100, input B = 10110101110111000110011110010101, output OUT = 10101100001100101111101111011010
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 1.5489e-06, input B = -1.64214e-06, output OUT = -2.54351e-12
# dadda_mult: input A = 00110101110011111110001111000100, input B = 10110101110111000110011110010101, output OUT = 10101100001100101111101111011010
# FPU_mult: SEND
# UVM_INFO @ 3065: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 4.29088e+21, input B = -1.66084e+06, output OUT = -7.12649e+27
# refmod: input A = 01100011011010001001101111111000, input B = 11001001110010101011110101011100, output OUT = 11101101101110000011011100100000
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 4.29088e+21, input B = -1.66084e+06, output OUT = -7.12649e+27
# dadda_mult: input A = 01100011011010001001101111111000, input B = 11001001110010101011110101011100, output OUT = 11101101101110000011011100100000
# FPU_mult: SEND
# UVM_INFO @ 3105: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 0.00011808, input B = 1.00097e-21, output OUT = 1.18195e-25
# refmod: input A = 00111000111101111010000110111010, input B = 00011100100101110100001100101000, output OUT = 00010110000100100101000101011011
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 0.00011808, input B = 1.00097e-21, output OUT = 1.18195e-25
# dadda_mult: input A = 00111000111101111010000110111010, input B = 00011100100101110100001100101000, output OUT = 00010110000100100101000101011011
# FPU_mult: SEND
# UVM_INFO @ 3145: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 7.88959e-13, input B = -3.31264e-26, output OUT = -2.61354e-38
# refmod: input A = 00101011010111100001001001110110, input B = 10010101001001000000100010110101, output OUT = 10000001000011100100101101100001
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 7.88959e-13, input B = -3.31264e-26, output OUT = -2.61354e-38
# dadda_mult: input A = 00101011010111100001001001110110, input B = 10010101001001000000100010110101, output OUT = 10000001000011100100101101100001
# FPU_mult: SEND
# UVM_INFO @ 3185: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -1.10063e+31, input B = 6.15127e-28, output OUT = -6770.27
# refmod: input A = 11110011000010101110101100111110, input B = 00010010010000101111000100010000, output OUT = 11000101110100111001001000101010
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -1.10063e+31, input B = 6.15127e-28, output OUT = -6770.27
# dadda_mult: input A = 11110011000010101110101100111110, input B = 00010010010000101111000100010000, output OUT = 11000101110100111001001000101010
# FPU_mult: SEND
# UVM_INFO @ 3225: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 4.72244e+35, input B = 7.50839e-19, output OUT = 3.54579e+17
# refmod: input A = 01111010101101011110011011010010, input B = 00100001010111011001101111000110, output OUT = 01011100100111010111011011110011
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 4.72244e+35, input B = 7.50839e-19, output OUT = 3.54579e+17
# dadda_mult: input A = 01111010101101011110011011010010, input B = 00100001010111011001101111000110, output OUT = 01011100100111010111011011110011
# FPU_mult: SEND
# UVM_INFO @ 3265: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 8.2691e+27, input B = 5.58603e+20, output OUT = inf
# refmod: input A = 01101101110101011100000001010111, input B = 01100001111100100100000101101100, output OUT = 01111111100000000000000000000000
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 8.2691e+27, input B = 5.58603e+20, output OUT = inf
# dadda_mult: input A = 01101101110101011100000001010111, input B = 01100001111100100100000101101100, output OUT = 01111111100000000000000000000000
# FPU_mult: SEND
# UVM_INFO @ 3305: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 3.40517e-12, input B = 2.76495e-07, output OUT = 9.4151e-19
# refmod: input A = 00101100011011111001111000000010, input B = 00110100100101000111000100011111, output OUT = 00100001100010101111000100111011
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 3.40517e-12, input B = 2.76495e-07, output OUT = 9.4151e-19
# dadda_mult: input A = 00101100011011111001111000000010, input B = 00110100100101000111000100011111, output OUT = 00100001100010101111000100111011
# FPU_mult: SEND
# UVM_INFO @ 3345: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 1.75513e-16, input B = 1.46501e+12, output OUT = 0.000257129
# refmod: input A = 00100101010010100101101001011100, input B = 01010011101010101000110011010000, output OUT = 00111001100001101100111101001111
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 1.75513e-16, input B = 1.46501e+12, output OUT = 0.000257129
# dadda_mult: input A = 00100101010010100101101001011100, input B = 01010011101010101000110011010000, output OUT = 00111001100001101100111101001111
# FPU_mult: SEND
# UVM_INFO @ 3385: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 8.42702e+14, input B = -2.18501e-22, output OUT = -1.84131e-07
# refmod: input A = 01011000001111111001101110111100, input B = 10011011100001000001001101100110, output OUT = 10110100010001011011010110100100
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 8.42702e+14, input B = -2.18501e-22, output OUT = -1.84131e-07
# dadda_mult: input A = 01011000001111111001101110111100, input B = 10011011100001000001001101100110, output OUT = 10110100010001011011010110100100
# FPU_mult: SEND
# UVM_INFO @ 3425: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -2.19224e-11, input B = -1.28049e+20, output OUT = 2.80715e+09
# refmod: input A = 10101101110000001101010011010101, input B = 11100000110111100010000101010011, output OUT = 01001111001001110101000110101011
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -2.19224e-11, input B = -1.28049e+20, output OUT = 2.80715e+09
# dadda_mult: input A = 10101101110000001101010011010101, input B = 11100000110111100010000101010011, output OUT = 01001111001001110101000110101011
# FPU_mult: SEND
# UVM_INFO @ 3465: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 0.000227045, input B = 2.15741e+22, output OUT = 4.89829e+18
# refmod: input A = 00111001011011100001001100001111, input B = 01100100100100100011000100001010, output OUT = 01011110100001111111010001111010
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 0.000227045, input B = 2.15741e+22, output OUT = 4.89829e+18
# dadda_mult: input A = 00111001011011100001001100001111, input B = 01100100100100100011000100001010, output OUT = 01011110100001111111010001111010
# FPU_mult: SEND
# UVM_INFO @ 3505: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -7.51707e+30, input B = 0.00219727, output OUT = -1.6517e+28
# refmod: input A = 11110010101111011100000111110001, input B = 00111011000100000000000000010100, output OUT = 11101110010101010111101001001101
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -7.51707e+30, input B = 0.00219727, output OUT = -1.6517e+28
# dadda_mult: input A = 11110010101111011100000111110001, input B = 00111011000100000000000000010100, output OUT = 11101110010101010111101001001101
# FPU_mult: SEND
# UVM_INFO @ 3545: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -1.11337e-34, input B = -1.13465e+21, output OUT = 1.26329e-13
# refmod: input A = 10000111000100111111111000101011, input B = 11100010011101100000100110111001, output OUT = 00101010000011100011101111011100
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -1.11337e-34, input B = -1.13465e+21, output OUT = 1.26329e-13
# dadda_mult: input A = 10000111000100111111111000101011, input B = 11100010011101100000100110111001, output OUT = 00101010000011100011101111011100
# FPU_mult: SEND
# UVM_INFO @ 3585: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -9.89336e-33, input B = 1.09364e+19, output OUT = -1.08198e-13
# refmod: input A = 10001010010011010111101000011010, input B = 01011111000101111100010111101111, output OUT = 10101001111100111010001111001000
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -9.89336e-33, input B = 1.09364e+19, output OUT = -1.08198e-13
# dadda_mult: input A = 10001010010011010111101000011010, input B = 01011111000101111100010111101111, output OUT = 10101001111100111010001111001000
# FPU_mult: SEND
# UVM_INFO @ 3625: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -1.61736e+23, input B = 1.2488e-18, output OUT = -201976
# refmod: input A = 11100110000010001111111011111011, input B = 00100001101110000100101000110101, output OUT = 11001000010001010011110111110101
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -1.61736e+23, input B = 1.2488e-18, output OUT = -201976
# dadda_mult: input A = 11100110000010001111111011111011, input B = 00100001101110000100101000110101, output OUT = 11001000010001010011110111110101
# FPU_mult: SEND
# UVM_INFO @ 3665: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 1.07834e+28, input B = 1.27456e-05, output OUT = 1.37441e+23
# refmod: input A = 01101110000010110101111101001100, input B = 00110111010101011101011000000100, output OUT = 01100101111010001101010110011100
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 1.07834e+28, input B = 1.27456e-05, output OUT = 1.37441e+23
# dadda_mult: input A = 01101110000010110101111101001100, input B = 00110111010101011101011000000100, output OUT = 01100101111010001101010110011100
# FPU_mult: SEND
# UVM_INFO @ 3705: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 1.19637e+27, input B = -6.80287e-38, output OUT = -8.13873e-11
# refmod: input A = 01101100011101110110011100101000, input B = 10000001101110010011000100010101, output OUT = 10101110101100101111100011111011
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 1.19637e+27, input B = -6.80287e-38, output OUT = -8.13873e-11
# dadda_mult: input A = 01101100011101110110011100101000, input B = 10000001101110010011000100010101, output OUT = 10101110101100101111100011111011
# FPU_mult: SEND
# UVM_INFO @ 3745: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -4.31085e+12, input B = 1.69328e-21, output OUT = -7.29946e-09
# refmod: input A = 11010100011110101110110010111000, input B = 00011100111111111110000101101000, output OUT = 10110001111110101100111010111011
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -4.31085e+12, input B = 1.69328e-21, output OUT = -7.29946e-09
# dadda_mult: input A = 11010100011110101110110010111000, input B = 00011100111111111110000101101000, output OUT = 10110001111110101100111010111011
# FPU_mult: SEND
# UVM_INFO @ 3785: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 6.23451e-09, input B = 9.70631e-16, output OUT = 6.05141e-24
# refmod: input A = 00110001110101100011011101010010, input B = 00100110100010111110000111111011, output OUT = 00011000111010100001101001000100
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 6.23451e-09, input B = 9.70631e-16, output OUT = 6.05141e-24
# dadda_mult: input A = 00110001110101100011011101010010, input B = 00100110100010111110000111111011, output OUT = 00011000111010100001101001000100
# FPU_mult: SEND
# UVM_INFO @ 3825: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -0.164427, input B = -5.89409e+09, output OUT = 9.69146e+08
# refmod: input A = 10111110001010000101111110000011, input B = 11001111101011111010100001010010, output OUT = 01001110011001110000111111111110
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -0.164427, input B = -5.89409e+09, output OUT = 9.69146e+08
# dadda_mult: input A = 10111110001010000101111110000011, input B = 11001111101011111010100001010010, output OUT = 01001110011001110000111111111110
# FPU_mult: SEND
# UVM_INFO @ 3865: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 1.42039e-21, input B = -3.78452e+21, output OUT = -5.37548
# refmod: input A = 00011100110101101010010010000101, input B = 11100011010011010010100011001110, output OUT = 11000000101011000000001111110101
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 1.42039e-21, input B = -3.78452e+21, output OUT = -5.37548
# dadda_mult: input A = 00011100110101101010010010000101, input B = 11100011010011010010100011001110, output OUT = 11000000101011000000001111110101
# FPU_mult: SEND
# UVM_INFO @ 3905: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -1.69594e-13, input B = -5.14022e+14, output OUT = 87.1749
# refmod: input A = 10101010001111101111001000001111, input B = 11010111111010011100000000001000, output OUT = 01000010101011100101100110001011
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -1.69594e-13, input B = -5.14022e+14, output OUT = 87.1749
# dadda_mult: input A = 10101010001111101111001000001111, input B = 11010111111010011100000000001000, output OUT = 01000010101011100101100110001011
# FPU_mult: SEND
# UVM_INFO @ 3945: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 5054.09, input B = -3.36083e+19, output OUT = -1.69859e+23
# refmod: input A = 01000101100111011111000010111110, input B = 11011111111010010011010001000111, output OUT = 11100110000011111110000001011110
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 5054.09, input B = -3.36083e+19, output OUT = -1.69859e+23
# dadda_mult: input A = 01000101100111011111000010111110, input B = 11011111111010010011010001000111, output OUT = 11100110000011111110000001011110
# FPU_mult: SEND
# UVM_INFO @ 3985: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = 1.59103e+07, input B = 6.29433e+06, output OUT = 1.00145e+14
# refmod: input A = 01001011011100101100010110010110, input B = 01001010110000000001011001101011, output OUT = 01010110101101100010100101110011
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = 1.59103e+07, input B = 6.29433e+06, output OUT = 1.00145e+14
# dadda_mult: input A = 01001011011100101100010110010110, input B = 01001010110000000001011001101011, output OUT = 01010110101101100010100101110011
# FPU_mult: SEND
# UVM_INFO @ 4025: uvm_test_top.env_h.comp [Comparator Match] 
# FPU_mult: WAIT_PIPEFILL
# REFMOD compute
# refmod: input A = -8.4601e-35, input B = 3.15538e-34, output OUT = -0
# refmod: input A = 10000110111000001110100001111001, input B = 00000111110100011011010111111100, output OUT = 10000000000000000000000000000000
# FPU_mult: EXECUTE
# FPU_mult: WAIT
# dadda_mult: input A = -8.4601e-35, input B = 3.15538e-34, output OUT = -0
# dadda_mult: input A = 10000110111000001110100001111001, input B = 00000111110100011011010111111100, output OUT = 10000000000000000000000000000000
# FPU_mult: SEND
# UVM_INFO @ 4065: uvm_test_top.env_h.comp [Comparator Match] 
# UVM_INFO verilog_src/uvm-1.1d/src/base/uvm_objection.svh(1267) @ 4065: reporter [TEST_DONE] 'run' phase is ready to proceed to the 'extract' phase
# UVM_INFO ../tb/env.sv(42) @ 4065: uvm_test_top.env_h [env] Reporting matched 98
# UVM_ERROR ../tb/env.sv(44) @ 4065: uvm_test_top.env_h [env] Saw 3 mismatched samples
# 
# --- UVM Report Summary ---
# 
# ** Report counts by severity
# UVM_INFO :  109
# UVM_WARNING :    3
# UVM_ERROR :    1
# UVM_FATAL :    0
# ** Report counts by id
# [Comparator Match]    98
# [Comparator Mismatch]     3
# [MISCMP]     6
# [Questa UVM]     2
# [RNTST]     1
# [TEST_DONE]     1
# [env]     2
# ** Note: $finish    : /software/mentor/questa10.7c/questasim/linux_x86_64/../verilog_src/uvm-1.1d/src/base/uvm_root.svh(430)
#    Time: 4065 ns  Iteration: 58  Instance: /top
# 1
# Break in Task uvm_pkg/uvm_root::run_test at /software/mentor/questa10.7c/questasim/linux_x86_64/../verilog_src/uvm-1.1d/src/base/uvm_root.svh line 430
# End time: 11:22:01 on Apr 12,2021, Elapsed time: 0:05:31
# Errors: 0, Warnings: 23
